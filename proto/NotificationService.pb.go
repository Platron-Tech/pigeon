// Code generated by protoc-gen-go. DO NOT EDIT.
// source: NotificationService.proto

package pb

import (
	context "context"
	fmt "fmt"
	proto "github.com/golang/protobuf/proto"
	grpc "google.golang.org/grpc"
	codes "google.golang.org/grpc/codes"
	status "google.golang.org/grpc/status"
	math "math"
)

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto.Marshal
var _ = fmt.Errorf
var _ = math.Inf

// This is a compile-time assertion to ensure that this generated file
// is compatible with the proto package it is being compiled against.
// A compilation error at this line likely means your copy of the
// proto package needs to be updated.
const _ = proto.ProtoPackageIsVersion3 // please upgrade the proto package

type ScheduleNotificationRequest struct {
	NotificationId       string   `protobuf:"bytes,1,opt,name=notificationId,proto3" json:"notificationId,omitempty"`
	SendAt               string   `protobuf:"bytes,2,opt,name=sendAt,proto3" json:"sendAt,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScheduleNotificationRequest) Reset()         { *m = ScheduleNotificationRequest{} }
func (m *ScheduleNotificationRequest) String() string { return proto.CompactTextString(m) }
func (*ScheduleNotificationRequest) ProtoMessage()    {}
func (*ScheduleNotificationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a9b3db0602ab621, []int{0}
}

func (m *ScheduleNotificationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScheduleNotificationRequest.Unmarshal(m, b)
}
func (m *ScheduleNotificationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScheduleNotificationRequest.Marshal(b, m, deterministic)
}
func (m *ScheduleNotificationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScheduleNotificationRequest.Merge(m, src)
}
func (m *ScheduleNotificationRequest) XXX_Size() int {
	return xxx_messageInfo_ScheduleNotificationRequest.Size(m)
}
func (m *ScheduleNotificationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_ScheduleNotificationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_ScheduleNotificationRequest proto.InternalMessageInfo

func (m *ScheduleNotificationRequest) GetNotificationId() string {
	if m != nil {
		return m.NotificationId
	}
	return ""
}

func (m *ScheduleNotificationRequest) GetSendAt() string {
	if m != nil {
		return m.SendAt
	}
	return ""
}

type ScheduleNotificationResponse struct {
	Done                 bool     `protobuf:"varint,1,opt,name=done,proto3" json:"done,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *ScheduleNotificationResponse) Reset()         { *m = ScheduleNotificationResponse{} }
func (m *ScheduleNotificationResponse) String() string { return proto.CompactTextString(m) }
func (*ScheduleNotificationResponse) ProtoMessage()    {}
func (*ScheduleNotificationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a9b3db0602ab621, []int{1}
}

func (m *ScheduleNotificationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_ScheduleNotificationResponse.Unmarshal(m, b)
}
func (m *ScheduleNotificationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_ScheduleNotificationResponse.Marshal(b, m, deterministic)
}
func (m *ScheduleNotificationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_ScheduleNotificationResponse.Merge(m, src)
}
func (m *ScheduleNotificationResponse) XXX_Size() int {
	return xxx_messageInfo_ScheduleNotificationResponse.Size(m)
}
func (m *ScheduleNotificationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_ScheduleNotificationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_ScheduleNotificationResponse proto.InternalMessageInfo

func (m *ScheduleNotificationResponse) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

type TriggerNotificationRequest struct {
	NotificationId       string   `protobuf:"bytes,1,opt,name=notificationId,proto3" json:"notificationId,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TriggerNotificationRequest) Reset()         { *m = TriggerNotificationRequest{} }
func (m *TriggerNotificationRequest) String() string { return proto.CompactTextString(m) }
func (*TriggerNotificationRequest) ProtoMessage()    {}
func (*TriggerNotificationRequest) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a9b3db0602ab621, []int{2}
}

func (m *TriggerNotificationRequest) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TriggerNotificationRequest.Unmarshal(m, b)
}
func (m *TriggerNotificationRequest) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TriggerNotificationRequest.Marshal(b, m, deterministic)
}
func (m *TriggerNotificationRequest) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TriggerNotificationRequest.Merge(m, src)
}
func (m *TriggerNotificationRequest) XXX_Size() int {
	return xxx_messageInfo_TriggerNotificationRequest.Size(m)
}
func (m *TriggerNotificationRequest) XXX_DiscardUnknown() {
	xxx_messageInfo_TriggerNotificationRequest.DiscardUnknown(m)
}

var xxx_messageInfo_TriggerNotificationRequest proto.InternalMessageInfo

func (m *TriggerNotificationRequest) GetNotificationId() string {
	if m != nil {
		return m.NotificationId
	}
	return ""
}

type TriggerNotificationResponse struct {
	Done                 bool     `protobuf:"varint,1,opt,name=done,proto3" json:"done,omitempty"`
	XXX_NoUnkeyedLiteral struct{} `json:"-"`
	XXX_unrecognized     []byte   `json:"-"`
	XXX_sizecache        int32    `json:"-"`
}

func (m *TriggerNotificationResponse) Reset()         { *m = TriggerNotificationResponse{} }
func (m *TriggerNotificationResponse) String() string { return proto.CompactTextString(m) }
func (*TriggerNotificationResponse) ProtoMessage()    {}
func (*TriggerNotificationResponse) Descriptor() ([]byte, []int) {
	return fileDescriptor_8a9b3db0602ab621, []int{3}
}

func (m *TriggerNotificationResponse) XXX_Unmarshal(b []byte) error {
	return xxx_messageInfo_TriggerNotificationResponse.Unmarshal(m, b)
}
func (m *TriggerNotificationResponse) XXX_Marshal(b []byte, deterministic bool) ([]byte, error) {
	return xxx_messageInfo_TriggerNotificationResponse.Marshal(b, m, deterministic)
}
func (m *TriggerNotificationResponse) XXX_Merge(src proto.Message) {
	xxx_messageInfo_TriggerNotificationResponse.Merge(m, src)
}
func (m *TriggerNotificationResponse) XXX_Size() int {
	return xxx_messageInfo_TriggerNotificationResponse.Size(m)
}
func (m *TriggerNotificationResponse) XXX_DiscardUnknown() {
	xxx_messageInfo_TriggerNotificationResponse.DiscardUnknown(m)
}

var xxx_messageInfo_TriggerNotificationResponse proto.InternalMessageInfo

func (m *TriggerNotificationResponse) GetDone() bool {
	if m != nil {
		return m.Done
	}
	return false
}

func init() {
	proto.RegisterType((*ScheduleNotificationRequest)(nil), "ScheduleNotificationRequest")
	proto.RegisterType((*ScheduleNotificationResponse)(nil), "ScheduleNotificationResponse")
	proto.RegisterType((*TriggerNotificationRequest)(nil), "TriggerNotificationRequest")
	proto.RegisterType((*TriggerNotificationResponse)(nil), "TriggerNotificationResponse")
}

func init() { proto.RegisterFile("NotificationService.proto", fileDescriptor_8a9b3db0602ab621) }

var fileDescriptor_8a9b3db0602ab621 = []byte{
	// 208 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 0x02, 0xff, 0xe2, 0x92, 0xf4, 0xcb, 0x2f, 0xc9,
	0x4c, 0xcb, 0x4c, 0x4e, 0x2c, 0xc9, 0xcc, 0xcf, 0x0b, 0x4e, 0x2d, 0x2a, 0xcb, 0x4c, 0x4e, 0xd5,
	0x2b, 0x28, 0xca, 0x2f, 0xc9, 0x57, 0x8a, 0xe5, 0x92, 0x0e, 0x4e, 0xce, 0x48, 0x4d, 0x29, 0xcd,
	0x49, 0x45, 0x56, 0x14, 0x94, 0x5a, 0x58, 0x9a, 0x5a, 0x5c, 0x22, 0xa4, 0xc6, 0xc5, 0x97, 0x87,
	0x24, 0xec, 0x99, 0x22, 0xc1, 0xa8, 0xc0, 0xa8, 0xc1, 0x19, 0x84, 0x26, 0x2a, 0x24, 0xc6, 0xc5,
	0x56, 0x9c, 0x9a, 0x97, 0xe2, 0x58, 0x22, 0xc1, 0x04, 0x96, 0x87, 0xf2, 0x94, 0x8c, 0xb8, 0x64,
	0xb0, 0x1b, 0x5f, 0x5c, 0x90, 0x9f, 0x57, 0x9c, 0x2a, 0x24, 0xc4, 0xc5, 0x92, 0x92, 0x9f, 0x97,
	0x0a, 0x36, 0x95, 0x23, 0x08, 0xcc, 0x56, 0x72, 0xe1, 0x92, 0x0a, 0x29, 0xca, 0x4c, 0x4f, 0x4f,
	0x2d, 0xa2, 0xc0, 0x45, 0x4a, 0x86, 0x5c, 0xd2, 0x58, 0x4d, 0xc1, 0x6d, 0xb1, 0xd1, 0x1e, 0x46,
	0x2e, 0x61, 0x2c, 0x21, 0x25, 0x14, 0xcc, 0x25, 0x82, 0xcd, 0x13, 0x42, 0x32, 0x7a, 0x78, 0x82,
	0x4e, 0x4a, 0x56, 0x0f, 0xaf, 0xcf, 0x03, 0xb8, 0x84, 0xb1, 0xb8, 0x4f, 0x48, 0x5a, 0x0f, 0xb7,
	0xdf, 0xa5, 0x64, 0xf4, 0xf0, 0x78, 0xc9, 0x89, 0x25, 0x8a, 0xa9, 0x20, 0x29, 0x89, 0x0d, 0x1c,
	0xaf, 0xc6, 0x80, 0x00, 0x00, 0x00, 0xff, 0xff, 0x2b, 0xb1, 0xc9, 0x3d, 0xf4, 0x01, 0x00, 0x00,
}

// Reference imports to suppress errors if they are not otherwise used.
var _ context.Context
var _ grpc.ClientConn

// This is a compile-time assertion to ensure that this generated file
// is compatible with the grpc package it is being compiled against.
const _ = grpc.SupportPackageIsVersion4

// NotificationServiceClient is the client API for NotificationService service.
//
// For semantics around ctx use and closing/ending streaming RPCs, please refer to https://godoc.org/google.golang.org/grpc#ClientConn.NewStream.
type NotificationServiceClient interface {
	ScheduleNotification(ctx context.Context, in *ScheduleNotificationRequest, opts ...grpc.CallOption) (*ScheduleNotificationResponse, error)
	TriggerNotification(ctx context.Context, in *TriggerNotificationRequest, opts ...grpc.CallOption) (*TriggerNotificationResponse, error)
}

type notificationServiceClient struct {
	cc *grpc.ClientConn
}

func NewNotificationServiceClient(cc *grpc.ClientConn) NotificationServiceClient {
	return &notificationServiceClient{cc}
}

func (c *notificationServiceClient) ScheduleNotification(ctx context.Context, in *ScheduleNotificationRequest, opts ...grpc.CallOption) (*ScheduleNotificationResponse, error) {
	out := new(ScheduleNotificationResponse)
	err := c.cc.Invoke(ctx, "/NotificationService/ScheduleNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

func (c *notificationServiceClient) TriggerNotification(ctx context.Context, in *TriggerNotificationRequest, opts ...grpc.CallOption) (*TriggerNotificationResponse, error) {
	out := new(TriggerNotificationResponse)
	err := c.cc.Invoke(ctx, "/NotificationService/TriggerNotification", in, out, opts...)
	if err != nil {
		return nil, err
	}
	return out, nil
}

// NotificationServiceServer is the server API for NotificationService service.
type NotificationServiceServer interface {
	ScheduleNotification(context.Context, *ScheduleNotificationRequest) (*ScheduleNotificationResponse, error)
	TriggerNotification(context.Context, *TriggerNotificationRequest) (*TriggerNotificationResponse, error)
}

// UnimplementedNotificationServiceServer can be embedded to have forward compatible implementations.
type UnimplementedNotificationServiceServer struct {
}

func (*UnimplementedNotificationServiceServer) ScheduleNotification(ctx context.Context, req *ScheduleNotificationRequest) (*ScheduleNotificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method ScheduleNotification not implemented")
}
func (*UnimplementedNotificationServiceServer) TriggerNotification(ctx context.Context, req *TriggerNotificationRequest) (*TriggerNotificationResponse, error) {
	return nil, status.Errorf(codes.Unimplemented, "method TriggerNotification not implemented")
}

func RegisterNotificationServiceServer(s *grpc.Server, srv NotificationServiceServer) {
	s.RegisterService(&_NotificationService_serviceDesc, srv)
}

func _NotificationService_ScheduleNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(ScheduleNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationServiceServer).ScheduleNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/NotificationService/ScheduleNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationServiceServer).ScheduleNotification(ctx, req.(*ScheduleNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

func _NotificationService_TriggerNotification_Handler(srv interface{}, ctx context.Context, dec func(interface{}) error, interceptor grpc.UnaryServerInterceptor) (interface{}, error) {
	in := new(TriggerNotificationRequest)
	if err := dec(in); err != nil {
		return nil, err
	}
	if interceptor == nil {
		return srv.(NotificationServiceServer).TriggerNotification(ctx, in)
	}
	info := &grpc.UnaryServerInfo{
		Server:     srv,
		FullMethod: "/NotificationService/TriggerNotification",
	}
	handler := func(ctx context.Context, req interface{}) (interface{}, error) {
		return srv.(NotificationServiceServer).TriggerNotification(ctx, req.(*TriggerNotificationRequest))
	}
	return interceptor(ctx, in, info, handler)
}

var _NotificationService_serviceDesc = grpc.ServiceDesc{
	ServiceName: "NotificationService",
	HandlerType: (*NotificationServiceServer)(nil),
	Methods: []grpc.MethodDesc{
		{
			MethodName: "ScheduleNotification",
			Handler:    _NotificationService_ScheduleNotification_Handler,
		},
		{
			MethodName: "TriggerNotification",
			Handler:    _NotificationService_TriggerNotification_Handler,
		},
	},
	Streams:  []grpc.StreamDesc{},
	Metadata: "NotificationService.proto",
}
